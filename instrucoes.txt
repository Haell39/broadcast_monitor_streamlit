▶ Como rodar (passos rápidos):
1) Crie um ambiente virtual e instale dependências:
   pip install streamlit opencv-python numpy av scikit-image
   
   Observação: é necessário ter o FFmpeg instalado no sistema.

2) Salve este arquivo como: app.py

3) Rode o app:
   streamlit run app.py

4) Na UI: informe um caminho de arquivo de vídeo OU uma URL (ex.: RTSP, HLS).
   Clique em "Iniciar Monitoramento". Os alertas aparecerão no painel de chat.

Limitações do protótipo (para simplificar):
- Em fonte remota (URL/stream), os checks de ÁUDIO podem ser limitados
  dependendo do demux suportado pelo OpenCV/FFmpeg no seu ambiente.
- A detecção é propositalmente simples (regra/limiar). Produção real envolveria
  mais robustez (buffers, tolerâncias por programa, auto-calibração, logging
  centralizado, métricas por PID/Service, etc.).

Principais detecções implementadas:
- Vídeo preto/escuro (black frame) prolongado
- Quadro congelado (freeze) via SSIM
- Quadro com brilho estourado (white-out) simples
- Silêncio de áudio (RMS baixo) prolongado
- Áudio clipando (picos próximos ao valor máximo) prolongado
- Desbalanceamento de canais L/R

Cada evento gera uma mensagem no chat com timestamp.